name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  lint:
    name: Linter de Código
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Super Linter
        uses: github/super-linter@v4
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: false
          FILTER_REGEX_INCLUDE: ".*(index.html|script.js|styles.css)$"

  test:
    name: Chequeo de codigo y test
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        node-version: [14]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install
           
      - name: Run tests
        run: npm test

  notificar_slack_exito:
    name: Notificar al Slack que salio bien
    runs-on: ubuntu-latest
    needs: test
    if: success()
    steps:
      - name: Notificar al Slack
        uses: 8398a7/action-slack@v3
        with:
          icon_emoji: ":white_check_mark:"
          text: ":white_check_mark: Test pasados con exito!"
          status: ${{ job.status }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  notificar_slack_fallo:
    name: Notificar al Slack que salio mal
    runs-on: ubuntu-latest
    needs: test
    if: failure()
    steps:
      - name: Notificar al Slack
        uses: 8398a7/action-slack@v3
        with:
          text: ":no_entry: No se lograron pasar los test"
          status: ${{ job.status }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  deploy_render:
    name: Despliegue en Render
    runs-on: ubuntu-latest
    needs: test
    if: success()
    steps:
      - name: Desplegar en Render
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" -X POST "https://api.render.com/deploy/srv-cpfne37109ks73bnsccg?key=jnQgfSOiqgI")
          if [ $response -eq 200 ]; then
            echo "Deployment successful"
            curl -X POST -H 'Content-type: application/json' --data '{"text":"Deploy exitoso."}' $SLACK_WEBHOOK_URL
          else
            echo "Deployment failed with HTTP status code $response"
            curl -X POST -H 'Content-type: application/json' --data '{"text":"¡Ha fallado el Deploy!"}' "$SLACK_WEBHOOK_URL"
            exit 1
          fi
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
