name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Linter de Código
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setear Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Instalar dependencias
        run: npm install
      
      - name: Correr linter de JS
        run: npm run lint:js

      - name: Correr linter de HTML  
        run: npm run lint:html

  test:
    name: Se ejecutan los test y Sonar Cloud
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setear Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Instalar dependencias
        run: npm install
           
      - name: Correr los test de Jest
        run: npm run jest

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
      - name: Chequeo del Quality Gate 
        run: |
          SONAR_STATUS=$(curl -s -u ${{ secrets.SONAR_TOKEN }}: "https://sonarcloud.io/api/qualitygates/project_status?projectKey=TobiasMaciel_TrabajoCI" | jq -r '.projectStatus.status')
          if [ "$SONAR_STATUS" != "OK" ]; then
            echo "Quality gate failed: $SONAR_STATUS"
            exit 1
          fi
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  notificar_slack_exito_jest:
    name: Notificar al Slack que salio bien Jest y Sonar
    runs-on: ubuntu-latest
    needs: test
    if: success()
    steps:
      - name: Notificar al Slack
        uses: 8398a7/action-slack@v3
        with:
          text: >
            :white_check_mark: Test de Jest y coverage de Sonar Cloud pasados con éxito!
            *Usuario:* ${{ github.actor }}
            *Mensaje del commit:* ${{ github.event.head_commit.message }}
          status: ${{ job.status }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_COMMITS }}

  notificar_slack_fallo_jest:
    name: Notificar al Slack que salio mal Jest o Sonar
    runs-on: ubuntu-latest
    needs: test
    if: failure()
    steps:
      - name: Notificar al Slack
        uses: 8398a7/action-slack@v3
        with:
          text: >
            :no_entry: No se lograron pasar los test de Jest o el coverage de Sonar Cloud
            *Usuario:* ${{ github.actor }}
            *Mensaje del commit:* ${{ github.event.head_commit.message }}
          status: ${{ job.status }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_COMMITS }}

  start_deploy_render:
    name: Iniciar el despligue en Render
    runs-on: ubuntu-latest
    needs: test
    if: success()
    steps:
      - name: Desplegar en Render
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" -X POST "https://api.render.com/deploy/srv-cpfne37109ks73bnsccg?key=jnQgfSOiqgI")
          if [ $response -eq 200 ]; then
            echo "Deployment successful"
            curl -X POST -H 'Content-type: application/json' --data '{"text":"⌛️ Iniciando despliegue en Render..."}' "$SLACK_WEBHOOK_DEPLOYS"
          else
            echo "Deployment failed with HTTP status code $response"
            curl -X POST -H 'Content-type: application/json' --data '{"text":"Ha fallado al iniciar el despliegue en Render!"}' "$SLACK_WEBHOOK_DEPLOYS"
            exit 1
          fi

        env:
          SLACK_WEBHOOK_DEPLOYS: ${{ secrets.SLACK_WEBHOOK_DEPLOYS }}
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}

  deploy_in_process:
    name: Despliegue en proceso
    runs-on: ubuntu-latest
    needs: start_deploy_render
    if: success()
    steps:
      - name: Despliegue en proceso
        run:  |
          deploy_status="pending"
          while [ "$deploy_status" != "live" ]; do
            response=$(curl -s -H "Authorization: Bearer $RENDER_API_KEY" "https://api.render.com/v1/services/srv-cpfne37109ks73bnsccg/deploys")
            echo "Render API response: $response"
            deploy_status=$(echo $response | jq -r '.[0].deploy.status') 
            echo "Current deploy status: $deploy_status"
            if [ "$deploy_status" == "failed" ]; then
              echo "Deployment failed."
              curl -X POST -H 'Content-type: application/json' --data '{"text":"❌ Ha fallado el Deploy!"}' "$SLACK_WEBHOOK_DEPLOYS"
              exit 1
            fi
            sleep 5
          done
          curl -X POST -H 'Content-type: application/json' --data '{"text":"✅ Deploy exitoso."}' "$SLACK_WEBHOOK_DEPLOYS"
          echo "Deployment completed successfully."
        env:
          SLACK_WEBHOOK_DEPLOYS: ${{ secrets.SLACK_WEBHOOK_DEPLOYS }}
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}

  test_deploy:
    name: Testear el deploy
    runs-on: ubuntu-latest
    needs: deploy_in_process
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setear Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Instalar dependencias
        run: npm install

      - name: Ejecutar Cypress
        run: npm run cypress:run
  
  notificar_slack_exito_cypress:
    name: Notificar al Slack que salio bien
    runs-on: ubuntu-latest
    needs: test_deploy
    if: success()
    steps:
      - name: Notificar al Slack
        uses: 8398a7/action-slack@v3
        with:
          text: >
            :white_check_mark: Test del deploy pasados con éxito!
            *Usuario:* ${{ github.actor }}
            *Mensaje del commit:* ${{ github.event.head_commit.message }}
          status: ${{ job.status }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_DEPLOYS }}

  notificar_slack_fallo_cypress:
    name: Notificar al Slack que salio mal
    runs-on: ubuntu-latest
    needs: test_deploy
    if: failure()
    steps:
      - name: Notificar al Slack
        uses: 8398a7/action-slack@v3
        with:
          text: >
            :no_entry: No se lograron pasar los test del deploy.
            *Usuario:* ${{ github.actor }}
            *Mensaje del commit:* ${{ github.event.head_commit.message }}
          status: ${{ job.status }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_DEPLOYS }}